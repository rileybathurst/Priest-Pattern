/* Contents
-------------------------------------------------------------- */

/*
	1. full
	2. Spacing
	3. Sticky
	4. Vimeo
	5. Fixes
	5.2 Images
	6. Off Canvas
	7. Social Nav
	8. Feature Cats
	9. Comments
	10. Genericons
	11. Box
	999. Required Worpess css
	- 999.2 Gallery

-------------------------------------------------------------- */

/*  1.
	Full width coloured background
	This is first incase after this it needs more classes
-------------------------------------------------------------- */

a {
  color: var(--primary-color);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.text-center {
  text-align: center;
}

.bg-primary {
  background: var(--primary-color);
  // this should have a color as well?

  a {
    color: var(--white);
  }
  a:hover {
    color: var(--light-gray);
  }
  cite {
    color: var(--medium-gray);
  }
}

// this is a link
.primary-text {
  color: var(--primary-color);
}

.white-a {
  color: var(--white);
}

.white-a:hover {
  color: var(--light-gray);
  background: var(--black);
}

.hero-image img {
  width: 100%;
}

.hidden-link {
  color: var(--black);
}

.shadow {
  // box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12); // current, Im not sure why I was doing 2 shadows seems overly complicated
  /* offset-x | offset-y | blur-radius | spread-radius | color */
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16);
}

.shadow-darker {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.32), 0 2px 10px 0 rgba(0, 0, 0, 0.24);
}

.attachment-post-thumbnail {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
}

/*
	3 - Sticky
	Wordpress and foundation both have base classes called sticky so this gives pressedant to wordpress
--------------------------------------------------------------- */
.sticky {
  position: relative;
}

.sticky .featured-title {
  background: var(--medium-gray);
  display: block;
  color: var(--white);
}

[type="text"],
[type="password"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="month"],
[type="week"],
[type="email"],
[type="number"],
[type="search"],
[type="tel"],
[type="time"],
[type="url"],
[type="color"],
textarea {
  background: var(--light-gray);
}

// wordpress controls this in a way it should be hidden
.featured-title {
  display: none;
}

/*  5 - Fixes - foundation 6 overwrite is written here so foundation can be updated
-------------------------------------------------------------- */

h1,
h2,
h3,
h4,
h5,
h6 {
  text-transform: uppercase;
}

.one-point-two-em {
  // why and where?
  font-size: 1.2em;
}

/* p {
	@include breakpoint(small) {
	text-align: left;
	}
	@media (min-width: $breakpoint__large) {
	text-align: justify;
	}
} */

/* Im really not sure this is a great idea smaller text in bold doesnt look great
.bold-big {
	font-weight: normal;

	@media (min-width: $breakpoint__large) {
	font-weight: bold;
	}
} */

nav {
  font-size: 1.2em;
  letter-spacing: 0.1rem;
  font-family: var(--major-font-family);
}

// ðŸ“£ this needs to be closer to the smaller nav to make sense
.menu-primary-container {
  @extend nav;
  display: none;
  
  @media (min-width: $header-menu-size) {
    display: block;
  }
  
  > ul > li {
  padding: 1rem 0.5rem;
  // this helps get the border back in line
  margin-bottom: 2px;
  margin-top: -2px;
  }
}

.menu-primary-container > ul > li > a {
  padding: 1rem;
}

.menu-primary-container > ul > a,
.menu-primary-container > ul > li > a {
  border-bottom: 5px solid var(--secondary-color); // invisibile until hovered
}

.menu-primary-container > ul > a:hover,
.menu-primary-container > ul > li > a:hover {
  color: --light-gray;
  background: hsl(var(--primary-color-b), calc(var(--primary-color-b) - 10%));
  border-bottom: 5px solid hsl(var(--secondary-color-b), calc(var(--primary-color-l) - 20%)); // playing around with an additional design style
}

/* Fix for automatic last-child float right from foundation */
.lastchildleft li:last-child {
  float: left !important;
}

/* Block grid can also be used */
.odd-clear li:nth-child(odd) {
  clear: both;
}

abbr[title] {
  border-bottom: none;
}
abbr {
  font-size: 100%;
  text-decoration: underline;
}

/*
	5.2 Images
------------------------------------------------ */

.img-100,
.img-100 img {
  width: 100%;
}

.img-100-high {
  overflow-x: hidden;
}

// sets the height cuts the side
.img-100-high img {
  height: 100%;
}

iframe {
  max-width: 100%;
}

.hero {
  display: grid;
  max-width: 89.9em; // stops 3 or more columns
  margin: var(--global-margin) auto; // center float
  padding: var(--global-padding); // small size never get to the edge
  grid-gap: var(--global-margin);

  // start doing columns once its bigger - slightly a hack
  @media (min-width: $breakpoint__medium) {
    grid-template-columns: repeat(auto-fill, minmax(30em, 1fr));
  }
}

/*
	grids
------------------------------------------------ */

.footer-contact-areas {
  max-width: 75rem;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  padding: var(--global-padding);
}

.site {
  display: grid; // this just for the 100 vh but there might be a smarter way
  min-height: 100vh;
}

footer {
  align-self: end;
  margin-bottom: 0; // browser reset
}

/*
	service grids
------------------------------------------------ */

.hero-logo {
  display: grid;
  place-items: center;

  // ðŸ“£ these next parts are design not layout
  z-index: 3; // sliding logo
  position: relative; // needed for z-index

  svg {
    fill: var(--white);
    width: 100%; // needed for chrome
  }

  a {
    display: inline-block;
    // max-width: 33%;
    max-width: 50%;
    margin: var(--global-margin) auto;
    padding: var(--global-padding); // start doing more with a type scale and vertical rythm
    border-radius: 5px;

    @media (min-width: $breakpoint__medium) {
      max-width: $general-measure;
      margin-top: calc(var(--global-margin) * 2);
      margin-bottom: calc(var(--global-margin) * 2);
    } // @media
  } // a
} // .hero-logo

.hero-logo a:hover {
  background: hsl(var(--primary-color-b), calc(var(--primary-color-b) - 10%));
  transition: 0.5s ease;

  svg {
    fill: var(--light-gray);
  }
}

.service-grid {
  // well that name is now wrong
  display: grid;
  // grid-template-columns: 1;
  // grid-template-rows: 1;
}

.service-grid img,
.service-grid h4 {
  grid-column: 1;
  grid-row: 1;
}

.service-grid-bg {
  background-color: rgba(
    10,
    127,
    189,
    0.7
  ); //rgba has alpha so not sure about how to have a variable
  align-self: end;
}

.inline-block-100w {
  // hack to make the a all the way across
  display: inline-block;
  width: 100%;
}

.service-grid-bg a {
  color: var(--white);
}

.service-grid-bg a:hover {
  color: var(--light-gray);
}

/*
	display grids
------------------------------------------------ */

.display-grid {
  //terrible name
  display: flex;
  justify-items: center;
}

.grid-icon {
  //terrible names
  grid-column: 1;
  align-self: stretch;
}

.grid-text {
  //terrible names
  grid-column: 2;
  align-self: center;
}

.footer-icons {
  /* display: grid;
	justify-items: center; // I think this was the whole point but I can probably do it easier with a flex */
  display: flex;
  flex-direction: column;

  @media (min-width: $breakpoint__medium) {
    flex-direction: row;
  }
}

.footer-icon-icon {
  //terrible names
  grid-column: 1;
  grid-row: 1;
  align-self: center;

  @media (min-width: $breakpoint__large) {
    justify-self: end;
  }
}

.footer-icon-icon svg {
  fill: var(--primary-color);
}

.footer-icon-icon svg:hover {
  fill: var(--secondary-color);
}

.footer-icon-text {
  grid-column: 1;
  grid-row: 2;
  align-self: center;

  @media (min-width: $breakpoint__large) {
    grid-column: 2;
    grid-row: 1;
    justify-self: start;
  }
}

.post-flex {
  display: flex;
  flex-direction: column;

  @media (min-width: $breakpoint__large) {
    flex-direction: column-reverse;
  }
}

.crown {
  display: grid;
  margin: var(--global-margin) 0;
}

.poster-thumbnail {
  grid-row: 1;
  grid-column: 1;
  z-index: -1;

  img,
  video {
    width: 100%;
  }
}

.crown-title {
  grid-row: 1;
  grid-column: 1;
  background: rgba(10, 127, 189, 0.7);
  padding: var(--global-padding);
  align-self: end;
  text-align: center;
  color: var(--white);
  margin-bottom: 6px; // guess and check
}

.poster {
  display: grid;
  grid-template-areas:
    "postcard"
    "bg"
    "title"
    "textual"
    "gallery";
  grid-gap: var(--global-margin);
  grid-template-columns: 1fr;

  @media (min-width: $breakpoint__medium) {
    grid-template-areas:
      "postcard postcard"
      "gallery  textual"
      ".        textual" // incase the text is longer than the images to stop things getting distored
;

    grid-template-columns: 1fr 1fr;
  }
}

.poster p,
.poster ul {
  // causing issues as the wp-block-gallery is also a ul
  grid-column: 1;
  @media (min-width: $breakpoint__medium) {
    grid-column: 2;
  }
}

.over-flex {
  grid-area: postcard;
  align-self: end;
  background-color: rgba(
    10,
    127,
    189,
    0.7
  ); //rgba has alpha so not sure about how to have a variable
  color: var(--white);
}

.poster-text {
  grid-area: textual;
}

.poster .wp-block-gallery {
  // grid-area: gallery;
  margin-left: 0;
}

// home page animation
.cfimg {
  display: grid;
  justify-items: stretch;
  align-items: stretch;
}
.cfimg picture {
  grid-column: 1;
  grid-row: 1;
  /* animation-name: FadeInOut;
	animation-duration: 16s;
	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite; */
}

/* Just do the link I dont understand the math 
@keyframes FadeInOut {
	0% {
	opacity:1;
	}
	18.75% {
	opacity:1;
	}
	25% {
	opacity:0;
	}
	93.75% {
	opacity:0;
	}
	100% {
	opacity:1;
	}
}

.cfimg picture:nth-of-type(1) {
	animation-delay: 12s;
}
.cfimg picture:nth-of-type(2) {
	animation-delay: 8s;
}
.cfimg picture:nth-of-type(3) {
	animation-delay: 4s;
}
.cfimg picture:nth-of-type(4) {
	animation-delay: 0;
}
*/

/*  6 - Off Canvas
--------------------------------------------------------------*/

.off-canvas a {
  color: var(--black);
}

/*
	999
	Required Worpess css - adapted from Twenty Sixteen
------------------------------------------------------------- */

.wp-caption {
  max-width: 100%;
}

.wp-caption-text {
  margin-top: var(--global-margin);
  font-style: italic;
}

.screen-reader-text {
  position: static !important;
}

.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute !important;
  width: 1px;
}

.screen-reader-text {
  position: absolute !important;
}

.gallery-caption {
  font-style: italic;
}

img .alignleft {
  padding-right: var(--global-padding);
}

.aligncenter {
  clear: both;
  display: block;
  margin: 0 auto;
}

.alignright {
  float: right;
}

.bypostauthor {
  display: block;
}

/**
 * 999.2 - Galleries
 */

.gallery-item {
  display: inline-block;
  text-align: center;
  padding: var(--global-padding);
  width: 100%;
  vertical-align: bottom;
}

/* Small Up screens */
// this is not how I work on these anymore it should be updated
@media only screen and (max-width: 40em) {
  /* min-width 1025px, large screens */

  .gallery-columns-2 .gallery-item,
  .gallery-columns-3 .gallery-item,
  .gallery-columns-4 .gallery-item,
  .gallery-columns-5 .gallery-item,
  .gallery-columns-6 .gallery-item,
  .gallery-columns-7 .gallery-item,
  .gallery-columns-8 .gallery-item,
  .gallery-columns-9 .gallery-item {
    max-width: 100%;
  }
}

/* Medium Up screens */
@media only screen and (min-width: 40.063em) {
  /* min-width 1025px, large screens */

  .gallery-columns-2 .gallery-item,
  .gallery-columns-3 .gallery-item,
  .gallery-columns-4 .gallery-item,
  .gallery-columns-5 .gallery-item,
  .gallery-columns-6 .gallery-item,
  .gallery-columns-7 .gallery-item,
  .gallery-columns-8 .gallery-item,
  .gallery-columns-9 .gallery-item {
    max-width: 50%;
  }
}

/* Large Up screens */
@media only screen and (min-width: 64.063em) {
  /* min-width 1025px, large screens */

  .gallery-columns-2 .gallery-item {
    max-width: 50%;
  }

  .gallery-columns-3 .gallery-item {
    max-width: 33.33%;
  }

  .gallery-columns-4 .gallery-item {
    max-width: 25%;
  }

  .gallery-columns-5 .gallery-item {
    max-width: 20%;
  }

  .gallery-columns-6 .gallery-item {
    max-width: 16.66%;
  }

  .gallery-columns-7 .gallery-item {
    max-width: 14.28%;
  }

  .gallery-columns-8 .gallery-item {
    max-width: 12.5%;
  }

  .gallery-columns-9 .gallery-item {
    max-width: 11.11%;
  }
}

.gallery-icon img {
  margin: 0 auto;
}

.gallery-caption {
  color: var(--medium-gray);
  display: block;
  font-size: 13px;
  font-size: 0.8125rem;
  font-style: italic;
  line-height: 1.6153846154;
  padding-top: 0.5384615385em;
}

.gallery-columns-6 .gallery-caption,
.gallery-columns-7 .gallery-caption,
.gallery-columns-8 .gallery-caption,
.gallery-columns-9 .gallery-caption {
  display: none;
}

.button.hollow {
  font-weight: bold;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
}

.fake-a {
  color: var(--white);
}

#header-contact-background {
  background: var(--light-gray);
  margin-bottom: calc(var(--global-margin) * 2);
  padding: calc(var(--global-padding) * 2) var(--global-padding) 0 var(--global-padding); // no bottom due to the contact boxes changing alignment is easier to have the bottom margin there
}

.header-contact {
  max-width: 89.9em;
  margin: 0 auto;
  display: flex;
  flex-direction: column;

  h3 {
    margin-bottom: calc(var(--global-margin) * 2);
  }

  @media (min-width: $breakpoint__large) {
    flex-direction: row;

    h3 {
      // once its in the row its a little different on the layout
      margin-bottom: 0;
      padding-right: var(--global-padding); // this is possibly causing the columns to be different sizes
    }
  }
}

.together {
  display: inline-block;
  width: 100%;
}

#header-contact--phone,
#header-contact--place {
  margin-bottom: calc(var(--global-margin) * 2);
}

.grab {
  grid-column: 1;
  grid-row: 1;

  @media (min-width: $breakpoint__medium) {
    grid-column: 2;
    grid-row: 1;
  }
}

.wp-block-gallery {
  grid-column: 1;
  grid-row: 2;

  @media (min-width: $breakpoint__medium) {
    grid-column: 1 !important; // trying to keep this inline but also control the ul for other lists
    grid-row: 1;
  }
}

// test
.is-style-box-title {
  color: burlywood;
}
// end of test

// gutenbery slider
.is-style-slider-gallery ul {
  display: grid;
  justify-items: stretch;
  align-items: stretch;

  li {
    grid-row: 1;
    grid-column: 1;
    animation-name: FadeInOut;
    animation-duration: 16s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
  }
}

/* Just do the link I dont understand the math */
@keyframes FadeInOut {
  0% {
    opacity: 1;
  }
  18.75% {
    opacity: 1;
  }
  25% {
    opacity: 0;
  }
  93.75% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.is-style-slider-gallery ul li:nth-of-type(1) {
  animation-delay: 12s;
}
.is-style-slider-gallery ul li:nth-of-type(2) {
  animation-delay: 8s;
}
.is-style-slider-gallery ul li:nth-of-type(3) {
  animation-delay: 4s;
}
.is-style-slider-gallery ul li:nth-of-type(4) {
  animation-delay: 0;
}

.is-style-featured-media-text {
  background: var(--light-gray);
  margin-bottom: calc(var(--global-margin) * 2);
  grid-template-columns: 1fr !important;

  > div {
    padding: 0 !important; // overwrite .wp-block-media-text .wp-block-media-text__content
    grid-row: 2 !important;
    grid-column: 1 !important;
  }

  h4 {
    padding: var(--global-padding);
    padding-left: calc(var(--global-padding) * 2);
    background-color: rgba(
      10,
      127,
      189,
      0.7
    ); //rgba has alpha so not sure about how to have a variable
    a {
      color: white; // remove this as its a link but testing
    }
  }

  p {
    // padding: var(--global-padding);
    padding-left: calc(var(--global-padding) * 2);
    padding-right: var(--global-padding);
  }
}

/*
.service-grid { // well that name is now wrong
	display: grid;
	// grid-template-columns: 1;
	// grid-template-rows: 1;
}

.service-grid img, .service-grid h4 {
	grid-column: 1;
	grid-row: 1;
}

.service-grid-bg {
	background-color: rgba(10, 127, 189, 0.7); //rgba has alpha so not sure about how to have a variable
	align-self: end;
}

.inline-block-100w { // hack to make the a all the way across
	display: inline-block;
	width: 100%;
}

.service-grid-bg a {
	color: var(--white);
}

.service-grid-bg a:hover {
	color: var(--light-gray);
}
*/

.page-template-page-swiss article {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--global-padding);
  padding-right: var(--global-padding);

  video {
    max-width: 100%;
    margin-bottom: calc(var(--global-margin) * 3);
  }

  .attachment-post-thumbnail {
    margin-bottom: calc(var(--global-margin) * 2);
  }

  /*
	.wp-block-column:not(:first-child) { this throws some design erros on small devices
		// margin-left: var(--global-margin)*2 !important; // overwrite default I would like to get down to as few important as possible I just need to work on the specificity
	}
	*/

  .wp-block-media-text {
    .wp-block-media-text__content {
      padding: 0 !important;
    }

    @media (min-width: 600px) {
      grid-template-columns: 1fr 1fr !important; // needs to be after a media query
      grid-gap: calc(var(--global-margin) * 2);
      margin-bottom: var(--global-margin);
    }
  }
}

.is-style-swiss-separator:before {
  border-style: solid;
  border-color: var(--light-gray);
  border-bottom-width: var(--global-padding)/2;
  content: "";
  width: calc(100% - 1em);
  // display: inline-block;
  margin: 0;
  padding: 0;
  float: left;

  @media (min-width: 600px) {
    width: calc(50% - 1em);
  }
}

.is-style-swiss-separator {
  margin: 0;
  // display: flow-root; // doesnt work on ios
  display: flex;
  height: var(--global-padding)/2;
  margin-bottom: var(--global-margin);
  border: none; // remove the original
}

.is-style-swiss-separator:after {
  @media (min-width: 600px) {
    width: calc(50% - 1em);
    content: "";
    border-style: solid;
    border-color: var(--light-gray);
    border-bottom-width: var(--global-padding)/2;
    margin: 0;
    padding: 0;
    float: right;
    margin-left: calc(var(--global-margin) * 2);
  }
}

.grid-container {
  padding-left: var(--global-padding);
  padding-right: var(--global-padding);
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto;
}

.service {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;

  @media (min-width: $breakpoint__medium) {
    flex-direction: row;
  }
}

.service > div {
  flex: 1;
  margin: var(--global-padding);
}

.grid-x {
  display: flex;
}

.grid-x > .large-6 {
  width: 50%;
}

.grid-padding-x > .cell {
  padding-left: var(--global-padding);
  padding-right: var(--global-padding);
}

.hide-for-large {
  @media (min-width: $breakpoint__large) {
    display: none !important;
  }
}

.show-for-large {
  display: none;
  @media (min-width: $breakpoint__large) {
    display: block; // not sure if this is exactly right
  }
}

.footer-extra {
  display: block;
  margin-top: 0;
}

.wp-block-colum {
  flex-basis: calc(50% - 16px);
  flex-grow: 0;
}

.copyright {
  float: left; // needed to have the p margin inside of this
  width: 100%;
  padding-top: 1rem;
}


// this is needed for the hr
// there might be a better way to do that
.tasks__wrapper {
  display: flex;
  flex-wrap: wrap;

  max-width: $breakpoint__full;
  margin: 0 auto;
}

.tasks {
  display: grid;
  // overlays so it has to be a grid
  margin-bottom: calc(var(--global-margin) * 2);
  max-width: 70rem; // double measure enough space for the margins
  margin: 0 auto;
  margin-bottom: 2rem;

  // grid-template-columns:
  // I presume this is running on default because it's nice and simple

  @media (min-width: $breakpoint__medium) {
    grid-template-columns: 1fr 2em 1fr 2em 1fr;
  }

  // this is getting really complicated should it start being named and changed?
  @media (min-width: $breakpoint__medium--half-step) {
    grid-template-columns: 1fr 2em 1fr 2em 1fr 2em 1fr;
  }
}

.small_menu--opener {
  width: 100%;
  height: 100%;
  cursor: pointer;
  padding-top: var(--global-padding);
  padding-bottom: var(--global-padding);
  transition: 1s ease;
}

.small_menu--opener:hover {
  color: var(--light-gray);
  background: hsl(var(--primary-color-b), calc(var(--primary-color-b) - 10%)); // ðŸ“£
}